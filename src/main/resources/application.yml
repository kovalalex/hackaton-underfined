spring:
  profiles:
    active: dev
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    hibernate:
      ddl-auto: update
  data:
    rest:
      detection-strategy: annotated
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

graphql:
  servlet:
    # Sets if GraphQL servlet should be created and exposed. If not specified defaults to "true".
    enabled: true
    # Sets the path where GraphQL servlet will be exposed. If not specified defaults to "/graphql"
    mapping: /graphql
    cors-enabled: true
    cors:
      allowed-origins: http://some.domain.com
      allowed-methods: GET, HEAD, POST
    # if you want to @ExceptionHandler annotation for custom GraphQLErrors
    exception-handlers-enabled: true
    context-setting: PER_REQUEST_WITH_INSTRUMENTATION
    # Sets if asynchronous operations are supported for GraphQL requests. If not specified defaults to true.
    async-mode-enabled: true

  graphiql:
    mapping: /graphiql
    endpoint:
      graphql: /graphql
      subscriptions: /subscriptions
    subscriptions:
      timeout: 30
      reconnect: false
    basePath: /
    enabled: true
    pageTitle: GraphiQL

---
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/employee
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
    maxActive: 10
    maxIdle: 5
    minIdle: 2
    initialSize: 5
    removeAbandoned: true
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
  config:
    activate:
      on-profile: dev

---
spring:
  datasource:
    url: ${JDBC_DATABASE_URL}
    driver-class-name: org.postgresql.Driver
    maxActive: 10
    maxIdle: 5
    minIdle: 2
    initialSize: 5
    removeAbandoned: true
  config:
    activate:
      on-profile: prod


